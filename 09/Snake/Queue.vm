function Queue.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 1
neg
pop this 0
push constant 0
pop this 1
push argument 0
pop this 2
push this 2
call Array.new 1
pop this 3
push pointer 0
return
function Queue.mod 1
push argument 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
not
if-goto WHILE_END0
push local 0
push argument 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Queue.add 1
push argument 0
pop pointer 0
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 0
push constant 1
add
push this 2
call Queue.mod 2
pop this 0
push this 0
push this 3
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Queue.erase 1
push argument 0
pop pointer 0
push this 1
push this 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Array.dispose 1
pop temp 0
push this 1
push constant 1
add
push this 2
call Queue.mod 2
pop this 1
push constant 0
return
function Queue.getTailVal 0
push argument 0
pop pointer 0
push this 0
push this 3
add
pop pointer 1
push that 0
return
function Queue.getTail_1Val 0
push argument 0
pop pointer 0
push this 0
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
return
function Queue.getHeadVal 0
push argument 0
pop pointer 0
push this 1
push this 3
add
pop pointer 1
push that 0
return
function Queue.isExist 2
push argument 0
pop pointer 0
push this 1
pop local 0
label WHILE_EXP0
push local 0
push this 0
push constant 1
add
push this 2
call Queue.mod 2
eq
not
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 1
add
pop pointer 1
push that 0
push argument 1
eq
push constant 1
push local 1
add
pop pointer 1
push that 0
push argument 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 1
add
push this 2
call Queue.mod 2
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Queue.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
